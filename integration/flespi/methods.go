package flespi

import (
	"encoding/json"
	"fmt"

	"github.com/Projects/zanjeer_api_gateway/models/flespi"
	"github.com/Projects/zanjeer_api_gateway/pkg/request"
)

const flespi_telemetry_url = "https://flespi.io/gw/devices/%s/telemetry/position,din?"
const token = "FlespiToken JfODQdT99bUEey0CBuTYWEz8W5WUdQFKVkbzlTykUjOWFEp6W6UIBhEldp5e5zPO"
const flespi_all_devices_url = "https://flespi.io/gw/devices/all"

func GetTelementary() (flespi.AutoGenerated, error) {

	var (
		res           flespi.AutoGenerated
		getAllDevices flespi.GetDevicesInfo
		ids           string
	)
	devices, err := request.Send(flespi_all_devices_url, "GET", token)
	if err != nil {
		return flespi.AutoGenerated{}, err
	}
	err = json.Unmarshal(devices, &getAllDevices)
	if err != nil {
		return flespi.AutoGenerated{}, err
	}
	if len(getAllDevices.Result) == 0 {
		return flespi.AutoGenerated{}, fmt.Errorf("No devices found")
	}
	for _, device := range getAllDevices.Result {
		ids += fmt.Sprintf("%d,", device.ID)
	}

	data, err := request.Send(fmt.Sprintf(flespi_telemetry_url, ids), "GET", token)
	if err != nil {
		return flespi.AutoGenerated{}, err
	}
	err = json.Unmarshal(data, &res)
	if err != nil {
		return flespi.AutoGenerated{}, err
	}

	return res, nil
}
