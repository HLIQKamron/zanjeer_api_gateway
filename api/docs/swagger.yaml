definitions:
  models.Admin:
    properties:
      created_at:
        type: string
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      type:
        type: string
    type: object
  models.CreateDeviceRequest:
    properties:
      device_type_id:
        type: string
      driver_id:
        type: string
      imei:
        type: string
      ip_address:
        type: string
      name:
        type: string
    type: object
  models.DeviceType:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.DevicesTeletonikaInfo:
    properties:
      latitude:
        type: integer
      longitude:
        type: integer
    type: object
  models.Driver:
    properties:
      created_at:
        type: string
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
      phone:
        type: string
      status:
        type: boolean
      verified:
        type: boolean
    type: object
  models.DriverSearchRequest:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      limit:
        type: integer
      offset:
        type: integer
      phone:
        type: string
    type: object
  models.Login:
    properties:
      login:
        type: string
      password:
        type: string
      type:
        type: string
    type: object
  models.Sms:
    properties:
      code:
        type: string
      phone:
        type: string
      sms_id:
        type: string
    type: object
  models.StandardResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /admin/add/admin:
    post:
      consumes:
      - application/json
      description: Here admins can be created.
      parameters:
      - description: admin
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Add admin by superadmin
      tags:
      - Admin
  /admin/get/admins:
    get:
      consumes:
      - application/json
      description: Here all admins can be fetched.
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: offset
        in: query
        name: offset
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Admin'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Get all admins
      tags:
      - Admin
  /admin/get/info:
    get:
      consumes:
      - application/json
      description: Here admin can be fetched.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Get self information
      tags:
      - Admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: Here user can be logged.
      parameters:
      - description: login users
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Login'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Login user
      tags:
      - Admin
  /device/create:
    post:
      consumes:
      - application/json
      description: Devices can be created
      parameters:
      - description: device
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.CreateDeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateDeviceRequest'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Device
      tags:
      - Device
  /devicetype/create-device-type:
    post:
      consumes:
      - application/json
      description: Device types can be created
      parameters:
      - description: admin
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.DeviceType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceType'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Device types
      tags:
      - GPS Device Type
  /devicetype/get-list-device-type:
    get:
      consumes:
      - application/json
      description: Device types can be fetched from
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceType'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Get device list
      tags:
      - GPS Device Type
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Here drivers can be deleted.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StandardResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: user delete
      tags:
      - Driver
    get:
      consumes:
      - application/json
      description: Here driver's info can be fetched.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Get info about driver
      tags:
      - Driver
  /user/edit-info:
    patch:
      consumes:
      - application/json
      description: Here users' info can be modified.
      parameters:
      - description: admin
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: user modifying information
      tags:
      - Driver
  /user/get-list:
    get:
      consumes:
      - application/json
      description: Here drivers' info can be fetched.
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Get info about all drivers driver
      tags:
      - Driver
  /user/register:
    post:
      consumes:
      - application/json
      description: Here users can be registered.
      parameters:
      - description: driver
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: user registeration
      tags:
      - Driver
  /user/search:
    post:
      consumes:
      - application/json
      description: Here driver's info can be fetched by name and phone
      parameters:
      - description: search driver
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/models.DriverSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Driver'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Get info about driver
      tags:
      - Driver
  /user/send-number:
    post:
      consumes:
      - application/json
      description: Here users can be registered.
      parameters:
      - description: admin
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Sms'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Sms'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: user sending number
      tags:
      - Driver
  /user/verify-number:
    post:
      consumes:
      - application/json
      description: Here users can be registered.
      parameters:
      - description: admin
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Sms'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Sms'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: user verifying number
      tags:
      - Driver
  /ws:
    get:
      consumes:
      - application/json
      description: Devices can be created
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DevicesTeletonikaInfo'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Device
      tags:
      - Device
swagger: "2.0"
