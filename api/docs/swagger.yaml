definitions:
  models.Admin:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.Login:
    properties:
      login:
        type: string
      password:
        type: string
      type:
        type: string
    type: object
  models.StandardResponse:
    properties:
      data: {}
      message:
        type: string
      status_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /add/admin:
    post:
      consumes:
      - application/json
      description: Here admins can be created.
      parameters:
      - description: admin
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Add admin by superadmin
      tags:
      - admin tags
  /superadmin/login:
    post:
      consumes:
      - application/json
      description: Here user can be logged.
      parameters:
      - description: login users
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Login'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.StandardResponse'
      security:
      - BearerAuth: []
      summary: Login user
      tags:
      - User
swagger: "2.0"
